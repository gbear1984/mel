//EDITED 11/04/2021 V1.01.0  Added user name space to ramp names
//EDITED 11/04/2021 V1.04.1  Fixed stupid script editor problem
//EDITED 11/04/2021 V1.04.2  Added Data used to generate ramps to notes section of data ramps 
/*Place This file in the mel command editor
and execute it to create new color ramps*/



//////////////////OS PROCS//////////////////////////////////////////////////////////////////////
proc int seDetermineOS()
{
    
    if (`about -nt` == 1)
    {
        return 1;
    }
    if (`about -linux` == 0)
    {
        return 0;
        
    }
}

proc string seGetSceneName()
{
    string $path          = `file -q -sceneName -shortName`;
    string $scrubString   = `encodeString $path`;    
    int    $stringSize    = `size($scrubString)`;    
    int    $newStringSize =  $stringSize-3;
    string $fixedString   =  startString($path, $newStringSize);
    
    return $fixedString;   
}

 proc string seGetFilePath()
{ 
    string $filePath = (`workspace -q -rd`+"data");
    string $currentSceneName = `seGetSceneName`;
    string $coordinatesFilePath = ( $filePath +"/"+$currentSceneName+"_attrRecord.txt" );    
    //check permissions
    $dirChk    =  `filetest -w ($filePath+"/")`;
    $fileChk   =  `filetest -w $coordinatesFilePath`;
    int $debug = 0;
    if($debug == 1)
    {
        print ($coordinatesFilePath      + "\n");
        print ("Dir Check: "  + $dirChk  + "\n");
        print ("File Check: " + $fileChk + "\n");
    }
    
    return $coordinatesFilePath; 
}


////////////////STRING PROCS////////////////////////////////////////////////////////////////////////

proc int seStringToInt(string $t)//Covert String to Int
{
     int $castStringToInt = int($t);
     return $castStringToInt;  
}


proc seFillNotesField(string $nodeName, string $data, string $userNameSpace)
{
    //Adds creation data to notes field of created ramp
    string $appendedData = ($userNameSpace+" ramp Data \n" +$data);
    print `attributeQuery -exists -n $nodeName "notes"`;
    if(`attributeQuery -exists -n $nodeName "notes"` == 0)
      {
         addAttr -dt "string" -ln "notes" -sn "nts" $nodeName;
       }
     if(`attributeQuery -exists -n $nodeName "notes"` == 1)
      {
         setAttr  -type "string" ($nodeName+".notes") $appendedData;
         
         //print ($nodeName+"\n");
       }      
}


//setNotesAttribute("SNX_51_insideReflection_I_Ramp_v03", "notes", "nts", "string", "hello");
//setAttr -type "string" "SNX_51_insideReflection_I_Ramp_v03.notes" "hello";
proc string seAngleRecordRead(int $mode, int $version, string $filePath)
{
     //string $filepath = seGetFilePath();
     string $filepath = "";
     if($mode == 1)
     {
          $filepath = "C:/Users/smeis/Desktop/GuardianGlass/indoorReflectance_V0"+$version+".txt";        
     }
     if($mode == 2)
     {

         $filepath = "C:/Users/smeis/Desktop/GuardianGlass/outdoorReflectance_V0"+$version+".txt";
     }
     if($mode == 3)
     {
         $filepath = "C:/Users/smeis/Desktop/GuardianGlass/transmission_V0"+$version+".txt";
     }
     if($mode == 4)
     {
         $filepath = "C:/Users/smeis/Desktop/GuardianGlass/master_V0"+$version+".txt";
     }
          if($mode == 5)
     {
         $filepath = $filePath;
     }    
     string $strFileContent = "";
     string $hdFileArray[];
     $hdFile = `fopen $filepath "r"`;
     if(`filetest -w $filepath` == 1)
     {
         while(!feof($hdFile))//magic
         {
 	           $strFileContent += `fgetline $hdFile`;
         }         
         fclose $hdFile;
     }
     if(`filetest -w $filepath` == 1)
     { 
         return $strFileContent;
     }     
     if(`filetest -w $filepath` == 0)
     { 
         return "no file path found";
     }
}


////////////////COLOR RAMP PROCS//////////////////////////////////////////////////////////////////////
proc float seMagnitudeToColor(int $Magnitude)
{
    float $color = $Magnitude * 2.55;
    return $color/255;
}

proc seRamp(string $rampName)//initialize a new ramp
{
    if(objExists($rampName) == 0)
    { 
        shadingNode -asTexture ramp -name $rampName;
        shadingNode -asUtility place2dTexture -name ($rampName+"_2D");
        connectAttr ($rampName+"_2D.outUV") ($rampName+".uv");
        connectAttr ($rampName+"_2D.outUvFilterSize") ($rampName+".uvFilterSize");
    }
}

proc seSetRamp(string $rampName, float $red, float $green, float $blue, float $angle, int $j)
{
    setAttr ($rampName+".colorEntryList["+$j+"].color") -type double3 $red $green $blue;
    setAttr ($rampName+".colorEntryList["+$j+"].position") $angle; 
}

proc int seGetAngleSampling(int $mode, int $version, string $filePath)
{    
     string $file               = seAngleRecordRead($mode, $version, $filePath);
     $hdFileArray               = stringToStringArray($file, "\t");
     int $getSelectionArraySize = (size($hdFileArray));     
     return ($getSelectionArraySize/3); 
}


//////////////////MAIN PROC////////////////////////////////////////////////////////////////////////////////

proc seCreateRampFromFile(int $debug, string $userNameSpace,int $mode, int $version, int $rampVersion ,int $dataSturcture, string $filePath)//dataSturcture no longer needed
{  
  scriptEditorInfo -suppressWarnings true;
  int    $i                      = 0;
  int    $j                      = 0;
  int    $loopMax                = seGetAngleSampling($mode, $version, $filePath);
         $loopMax                = 18;
  
  string $namespace              = $userNameSpace;
  string $file                   = seAngleRecordRead($mode,$version, $filePath);
  string $stripSpecials          = "";//We are going to kill some special characters!
  string $stripSpecialsArray[];       //They are going to get it!
  string $reformatString         = "";
  
  //////////////////////RAMP CREATION NAME VARIABLES///////////////////////////////////////////////////////
  string $insideReflection_CD_Ramp    = ("insideReflection_CD_Ramp" + "_v0");
  string $insideReflection_I_Ramp     = ("insideReflection_I_Ramp"  + "_v0");
  
  string $outsideReflection_CD_Ramp   = ("outsideReflection_CD_Ramp"+ "_v0");
  string $outsideReflection_I_Ramp    = ("outsideReflection_I_Ramp" + "_v0");
  
  string $transmission_CD_Ramp        = ("transmission_CD_Ramp"     + "_v0");
  string $transmission_I_Ramp         = ("transmission_I_Ramp"      + "_v0");

  string $outsideReflection_CD_RECORD = "";
  string $outsideReflection_I_RECORD  = "";
  
  string $insideReflection_CD_RECORD  = "";
  string $insideReflection_I_RECORD   = "";
  
  string $transmission_CD_RECORD      = "";
  string $transmission_I_RECORD       = "";
  
         $hdFileArray            = stringToStringArray($file, "\t");
  int    $getSelectionArraySize  = (size($hdFileArray)); 
  float  $angle                  = 1.0/$loopMax;//Normalize Data sample increments 
  float  $angleAmount            = $angle;
  float  $red                    = 0.0;
  float  $green                  = 0.0;
  float  $blue                   = 0.0;
  float  $luma                   = 0.0;
  

  //Create ramps 
if($debug == 0)
{
  seRamp(($userNameSpace+$insideReflection_CD_Ramp+$rampVersion));
  seRamp(($userNameSpace+$insideReflection_I_Ramp+$rampVersion));

  seRamp(($userNameSpace+$outsideReflection_CD_Ramp+$rampVersion));
  seRamp(($userNameSpace+$outsideReflection_I_Ramp+$rampVersion));

  seRamp(($userNameSpace+$transmission_CD_Ramp+$rampVersion));
  seRamp(($userNameSpace+$transmission_I_Ramp+$rampVersion));
}
 
  //print $getSelectionArraySize;
  //switch to 1 if print out need list is required
  if ($debug == 1)
  {
      for($t in $hdFileArray)
      { 
           $stripSpecials = (encodeString($t));
           $removeSpecials = `tokenize $stripSpecials "\\n" $stripSpecialsArray`;   
           for($t in $stripSpecialsArray)
           {
             $reformatString = ($reformatString + $t + "\t");
             seStringToInt($t);  
           } 

      }
      print $reformatString;
      $hdStringArray = stringToStringArray($reformatString, "\t");
  }
  if ($debug == 0)
  {
      for($t in $hdFileArray)
      { 
          $stripSpecials = (encodeString($t));//Check for new line character and remove
          $removeSpecials = `tokenize $stripSpecials "\\n" $stripSpecialsArray`;   
          for($t in $stripSpecialsArray)
             {
                 //print ($t+" ");
                 $reformatString = ($reformatString + $t + "\t"); 
                 $hdStringArray = stringToStringArray($reformatString, "\t");
             } 

       }  
      while ($j <= $loopMax)
      {       
              //Set Color Data from File Read for Transmission
              $redT    = float(seStringToInt($hdFileArray[$i+ 1]))/255.00;
              $greenT  = float(seStringToInt($hdFileArray[$i+ 2]))/255.00;
              $blueT   = float(seStringToInt($hdFileArray[$i+ 3]))/255.00;
              $lumaTY  = float(seStringToInt($hdFileArray[$i+ 4]))/255.00;
              
              //Set Color Data from File Read for Outside Reflection
              $redRO   = float(seStringToInt($hdFileArray[$i+ 5]))/255.00;
              $greenRO = float(seStringToInt($hdFileArray[$i+ 6]))/255.00;
              $blueRO  = float(seStringToInt($hdFileArray[$i+ 7]))/255.00;
              $lumaROY = float(seStringToInt($hdFileArray[$i+ 8]))/255.00;
             
              //Set Color Data from File Read for Inside Reflection
              $redRI   = float(seStringToInt($hdFileArray[$i+ 9]))/255.00;
              $greenRI = float(seStringToInt($hdFileArray[$i+10]))/255.00;
              $blueRI  = float(seStringToInt($hdFileArray[$i+11]))/255.00;
              $lumaRIY = float(seStringToInt($hdFileArray[$i+12]))/255.00;
              
              //Set Ramp input position
              if(seStringToInt($hdFileArray[$i]) == 0){$angle = 0;}
              if(seStringToInt($hdFileArray[$i]) >  0){$angle = float($j*5/90.0);if($debug == 1){print $angle;}}

              seSetRamp(($userNameSpace+$insideReflection_CD_Ramp+$rampVersion),   $redRI, $greenRI, $blueRI,  $angle, $j);
              seSetRamp(($userNameSpace+$outsideReflection_CD_Ramp+$rampVersion),  $redRO, $greenRO, $blueRO,  $angle, $j);
              seSetRamp(($userNameSpace+$transmission_CD_Ramp+$rampVersion),       $redT , $greenT , $blueT,   $angle, $j);
              seSetRamp(($userNameSpace+$transmission_I_Ramp+$rampVersion),        $lumaTY,$lumaTY,  $lumaTY,  $angle, $j);
              seSetRamp(($userNameSpace+$outsideReflection_I_Ramp+$rampVersion),   $lumaROY,$lumaROY,$lumaROY, $angle, $j);
              seSetRamp(($userNameSpace+$insideReflection_I_Ramp+$rampVersion),    $lumaRIY,$lumaRIY,$lumaRIY, $angle, $j);
              
              //Record Data to ramp notes 
              $outsideReflection_CD_RECORD = $outsideReflection_CD_RECORD +"R "     + $redRI  + "\tG " +$greenRI+"\tB "+$blueRI+"\tAngle "+$angle+"\n";
              $outsideReflection_I_RECORD  = $outsideReflection_I_RECORD  +"Luma "  + $lumaROY+ "\tAngle " +$angle  +                             "\n";
  
              $insideReflection_CD_RECORD  = $insideReflection_CD_RECORD  +"R "     + $redRO  + "\tG " +$greenRO+"\tB "+$blueRO+"\tAngle "+$angle +"\n";
              $insideReflection_I_RECORD   = $insideReflection_I_RECORD   +"Luma "  + $lumaRIY+ "\tAngle " +$angle  +                             "\n";
  
              $transmission_CD_RECORD      = $transmission_CD_RECORD      +"R "     + $redT   + "\tG " +$greenT +"\tB "+$blueT+ "\tAngle "+$angle +"\n";
              $transmission_I_RECORD       = $transmission_I_RECORD       +"Luma "  + $lumaTY + "\tAngle " +$angle  +                             "\n";
              

              //Increment Counts
              $j=$j+1;
              $i=$i+12;              
      }
      seFillNotesField(($userNameSpace+$outsideReflection_CD_Ramp+$rampVersion),$outsideReflection_CD_RECORD, ($userNameSpace+$outsideReflection_CD_Ramp+$rampVersion));
      seFillNotesField(($userNameSpace+$outsideReflection_I_Ramp+$rampVersion),$outsideReflection_I_RECORD, ($userNameSpace+$outsideReflection_I_Ramp+$rampVersion));
      
      seFillNotesField(($userNameSpace+$insideReflection_CD_Ramp+$rampVersion),$insideReflection_CD_RECORD, ($userNameSpace+$insideReflection_CD_Ramp+$rampVersion));
      seFillNotesField(($userNameSpace+$insideReflection_I_Ramp+$rampVersion),$insideReflection_I_RECORD, ($userNameSpace+$insideReflection_I_Ramp+$rampVersion));
      
      seFillNotesField(($userNameSpace+$transmission_CD_Ramp+$rampVersion),$transmission_CD_RECORD, ($userNameSpace+$transmission_CD_Ramp+$rampVersion));
      seFillNotesField(($userNameSpace+$transmission_I_Ramp+$rampVersion),$transmission_I_RECORD, ($userNameSpace+$transmission_I_Ramp+$rampVersion));
    }
}

////////////////////////////PROC CALLS FOR RAMP CREATION//////////////////////////////////////////////////////////////////
seCreateRampFromFile(0 /*debug*/,
                     "SNX_62_27_"/*NameSpace can leave blank*/,
                     5 /*Mode Which ramp 1 2 3 4 5*/,
                     1 /*Ramp File Version"*/,
                     3 /*Ramp Maya Version"*/,
                     4 /*Ramp Data Sturcture Tuple or Quad*/,
                     "C:/Users/smeis/Desktop/GuardianGlass/SNX_62_27_Master_v01.txt" /*filepath if custom needed*/
                     );//Inside Reflection    
                     
seCreateRampFromFile(0 /*debug*/,
                     "AG_43_"/*NameSpace can leave blank*/,
                     5 /*Mode Which ramp 1 2 3 4 5*/,
                     1 /*Ramp File Version"*/,
                     3 /*Ramp Maya Version"*/,
                     4 /*Ramp Data Sturcture Tuple or Quad*/,
                     "C:/Users/smeis/Desktop/GuardianGlass/AG_43_Master_v01.txt" /*filepath if custom needed*/
                     );//Inside Reflection     

seCreateRampFromFile(0 /*debug*/,
                     "SN_68_"/*NameSpace can leave blank*/,
                     5 /*Mode Which ramp 1 2 3 4 5*/,
                     1 /*Ramp File Version"*/,
                     3 /*Ramp Maya Version"*/,
                     4 /*Ramp Data Sturcture Tuple or Quad*/,
                     "C:/Users/smeis/Desktop/GuardianGlass/SN_68_Master_v01.txt" /*filepath if custom needed*/
                     );//Inside Reflection  
seCreateRampFromFile(0 /*debug*/,
                     "SNX_51_"/*NameSpace can leave blank*/,
                     5 /*Mode Which ramp 1 2 3 4 5*/,
                     1 /*Ramp File Version"*/,
                     3 /*Ramp Maya Version"*/,
                     4 /*Ramp Data Sturcture Tuple or Quad*/,
                     "C:/Users/smeis/Desktop/GuardianGlass/master_v01.txt" /*filepath if custom needed*/
                     );//Inside Reflection  



/*

//These can be copied to a text file and run under Mode 4 or Mode 5 of seCreateRampFromFile
//
//HARD DATA COPY
///////////////////////////////////////////////////////////
//SN_68
0	221	215	192	67.7	91	92	87	10.6	100	98	85	12.1
5	221	215	192	67.7	91	92	87	10.6	100	98	85	12.1
10	221	215	192	67.6	91	92	87	10.6	99	98	85	12.1
15	220	215	192	67.5	90	92	87	10.5	99	98	85	12.1
20	220	214	192	67.3	90	92	86	10.5	99	98	85	12.1
25	220	214	192	67.1	90	92	86	10.5	99	99	86	12.2
30	219	214	191	66.7	90	93	86	10.6	100	99	87	12.4
35	218	213	190	66.2	90	94	87	10.8	101	100	89	12.7
40	217	212	188	65.4	91	95	89	11.2	103	102	92	13.3
45	214	210	186	64.2	94	98	93	11.9	108	106	97	14.3
50	211	208	183	62.4	99	102	98	13.2	114	111	105	16.0
55	206	204	178	59.8	108	109	106	15.2	124	119	114	18.7
60	199	199	171	55.8	119	119	116	18.5	138	130	127	23.0
65	188	190	162	50.0	135	133	129	23.6	156	146	142	29.5
70	172	176	147	41.8	155	151	145	31.3	178	165	160	39.0
75	148	154	128	31.0	178	173	163	41.8	201	188	179	51.5
80	115	123	100	18.7	203	195	183	55.3	224	211	198	66.4
85	68	77	61	6.8	231	219	204	72.0	246	232	216	82.1
90	0	0	0	0.0	255	252	234	100.0	255	252	234	100.0


///////////////////////////////////////////////////////////
//SN_62_27
0	208	207	183	61.2	89	94	90	10.9	98	93	91	11.2
5	207	207	183	61.2	89	94	89	10.9	98	93	91	11.2
10	207	206	183	61.1	89	94	89	10.9	98	93	91	11.2
15	207	206	183	61.0	88	94	88	10.9	98	93	90	11.2
20	206	206	183	60.8	88	94	87	10.8	98	93	90	11.2
25	206	206	182	60.5	87	94	87	10.8	99	93	90	11.3
30	205	205	182	60.0	87	95	86	10.8	100	94	90	11.5
35	203	204	181	59.4	88	95	87	11.0	102	96	91	11.9
40	201	203	179	58.5	90	97	88	11.4	106	98	94	12.6
45	198	201	177	57.2	94	99	91	12.1	111	102	97	13.8
50	195	199	174	55.3	99	104	95	13.3	118	109	103	15.8
55	189	194	170	52.4	107	111	101	15.4	128	119	111	18.9
60	182	187	164	48.4	118	121	109	18.7	141	133	122	23.7
65	172	177	156	42.7	132	135	120	23.7	157	150	136	30.7
70	157	162	144	35.1	150	153	135	30.9	177	170	153	40.4
75	135	141	125	25.6	171	173	152	40.7	200	191	174	52.8
80	104	111	97	15.1	196	194	173	53.5	223	213	194	67.2
85	60	67	57	5.3	227	218	198	70.4	245	233	214	82.4
90	0	0	0	0.0	255	252	234	100.0	255	252	234	100.0

///////////////////////////////////////////////////////////
//AG_43
0	174	173	156	41.3	147	148	145	29.5	112	104	121	14.6
5	174	173	156	41.3	147	148	145	29.5	112	104	121	14.6
10	174	173	156	41.2	146	148	145	29.4	112	103	121	14.6
15	174	173	156	41.2	146	148	145	29.3	112	103	120	14.6
20	174	173	156	41.1	146	147	145	29.1	113	103	120	14.6
25	173	173	156	41.0	146	147	144	29.0	114	103	119	14.7
30	172	172	156	40.7	146	147	144	28.8	116	104	118	14.9
35	171	172	155	40.4	145	146	144	28.7	118	105	118	15.3
40	170	171	155	39.8	146	146	144	28.7	122	108	119	16.1
45	167	169	154	38.9	146	146	144	28.8	127	112	120	17.5
50	164	166	152	37.5	148	147	145	29.3	135	119	123	19.7
55	159	162	150	35.5	151	149	147	30.3	144	128	128	23.0
60	153	156	145	32.6	155	153	150	32.0	157	141	136	28.0
65	143	147	138	28.6	162	159	155	34.7	172	157	148	35.0
70	129	134	128	23.3	171	167	162	39.0	189	176	162	44.3
75	111	115	111	16.8	185	179	172	45.4	208	195	180	56.0
80	84	89	88	9.8	204	194	185	55.0	228	215	198	69.3
85	48	52	52	3.4	230	215	203	69.9	247	234	216	83.4
90	0	0	0	0.0	255	252	234	100.0	255	252	234	100.0

///////////////////////////////////////////////////////////
//SNX_51
0	208	207	183	61.2	89	94	90	10.9	98	93	91	11.2
5	207	207	183	61.2	89	94	89	10.9	98	93	91	11.2
10	207	206	183	61.1	89	94	89	10.9	98	93	91	11.2
15	207	206	183	61.0	88	94	88	10.9	98	93	90	11.2
20	206	206	183	60.8	88	94	87	10.8	98	93	90	11.2
25	206	206	182	60.5	87	94	87	10.8	99	93	90	11.3
30	205	205	182	60.0	87	95	86	10.8	100	94	90	11.5
35	203	204	181	59.4	88	95	87	11.0	102	96	91	11.9
40	201	203	179	58.5	90	97	88	11.4	106	98	94	12.6
45	198	201	177	57.2	94	99	91	12.1	111	102	97	13.8
50	195	199	174	55.3	99	104	95	13.3	118	109	103	15.8
55	189	194	170	52.4	107	111	101	15.4	128	119	111	18.9
60	182	187	164	48.4	118	121	109	18.7	141	133	122	23.7
65	172	177	156	42.7	132	135	120	23.7	157	150	136	30.7
70	157	162	144	35.1	150	153	135	30.9	177	170	153	40.4
75	135	141	125	25.6	171	173	152	40.7	200	191	174	52.8
80	104	111	97	15.1	196	194	173	53.5	223	213	194	67.2
85	60	67	57	5.3	227	218	198	70.4	245	233	214	82.4
90	0	0	0	0.0	255	252	234	100.0	255	252	234	100.0





