/*Place This file in the mel command editor
and execute it to create new color ramps*/


proc string seGetSceneName()
{
    string $path = `file -q -sceneName -shortName`;
    string $scrubString = `encodeString $path`;    
    int    $stringSize    =`size($scrubString)`;    
    int    $newStringSize = $stringSize-3;
    string $fixedString = startString($path, $newStringSize);
    return $fixedString;   
}

 proc string seGetFilePath()
{ 
    string $filePath = (`workspace -q -rd`+"data");
    string $currentSceneName = `seGetSceneName`;
    string $coordinatesFilePath = ( $filePath +"/"+$currentSceneName+"_attrRecord.txt" );    
    //check permissions
    $dirChk = `filetest -w ($filePath+"/")`;
    $fileChk = `filetest -w $coordinatesFilePath`;
    int $debug = 0;
    if($debug == 1)
    {
        print ($coordinatesFilePath + "\n");
        print ("Dir Check: " + $dirChk + "\n");
        print ("File Check: " + $fileChk + "\n");
    }
    return $coordinatesFilePath; 
}

proc int seGetAngleSampling(int $mode)
{    
     string $file = seAttrRecordRead($mode);
     $hdFileArray = stringToStringArray($file, "\t");
     int $getSelectionArraySize = (size($hdFileArray));
     return ($getSelectionArraySize/3); 
}

proc string seAttrRecordRead(int $mode)
{
     //string $filepath = seGetFilePath();
     string $filepath = "";
     if($mode == 1)
     {
         $filepath = "C:/Users/smeis/Desktop/GuardianGlass/indoorReflectance.txt";
         
     }
     if($mode == 2)
     {
       //$filepath = "C:/Users/smeis/Desktop/GuardianGlass/outdoorReflectance.txt";
         $filepath = "C:/Users/smeis/Desktop/GuardianGlass/outdoorReflectance.txt";
     }
     if($mode == 3)
     {
         $filepath = "C:/Users/smeis/Desktop/GuardianGlass/transmission.txt";
         
     }
     string $strFileContent = "";
     string $hdFileArray[];
     $hdFile = `fopen $filepath "r"`;
     if(`filetest -w $filepath` == 1)
     {
         while(!feof($hdFile))//magic
         {
 	           $strFileContent += `fgetline $hdFile`;
         }         
         fclose $hdFile;
     }
     if(`filetest -w $filepath` == 1)
     { 
         return $strFileContent;
     }     
     if(`filetest -w $filepath` == 0)
     { 
         return "no file path found";
     }
}
seAttrRecordRead(2);

proc seRamp(string $rampName)//initialize a new ramp
{
    shadingNode -asTexture ramp -name $rampName;
    shadingNode -asUtility place2dTexture -name ($rampName+"_2D");
    connectAttr ($rampName+"_2D.outUV") ($rampName+".uv");
    connectAttr ($rampName+"_2D.outUvFilterSize") ($rampName+".uvFilterSize");
}


proc seSetRamp(string $rampName, float $red, float $green, float $blue, float $angle, int $j)
{
    setAttr ($rampName+".colorEntryList["+$j+"].color") -type double3 $red $green $blue;
    setAttr ($rampName+".colorEntryList["+$j+"].position") $angle; 
}
proc seAssignAttrFromFile(int $debug, string $userNameSpace,int $mode, int $version)
{
  int    $i                     = 0;
  int    $j                     = 0;
  int    $loopMax               = seGetAngleSampling($mode);
  string $namespace             = $userNameSpace;
  string $file                  = seAttrRecordRead($mode);
  
  string $insideReflectionRamp  = ("insideReflectionRamp" +"_v0"+$version);
  string $outsideReflectionRamp = ("outsideReflectionRamp"+"_v0"+$version);
  string $transmissionRamp      = ("transmissionRamp"     +"_v0"+$version);

         $hdFileArray           = stringToStringArray($file, "\t");
  int    $getSelectionArraySize = (size($hdFileArray)); 
  float  $angleAmount           = 0.0;
  float  $angle                 = 1.0/ $loopMax;//Normalize Data sample increments 
  float  $red                   = 0.0;
  float  $green                 = 0.0;
  float  $blue                  = 0.0;
  
  //Create 
  if($mode == 1)
  {
    seRamp($insideReflectionRamp);
  }
  if($mode == 2)
  {
    seRamp($outsideReflectionRamp);
  }
  if($mode == 3)
  {
    seRamp($transmissionRamp);
  }  
  //print $getSelectionArraySize;
  //switch to 1 if print out need list is required
  if ($debug == 1)
  {
      while ($i < $getSelectionArraySize)
      {
          print  ($hdFileArray[$i+1] + " " + $hdFileArray[$i+2] + " " + $hdFileArray[$i+3] + "\n");  
          $i=$i+4;  
      }
  }
  if ($debug == 0)
  {
      while ($j < $loopMax)
      {
          //print (" color " + $hdFileArray[$i+1] + " " + $hdFileArray[$i+2] + " " + $hdFileArray[$i+3] + " angle " + $angleAmount + "\n")
          //seRamp("transmissionRamp");
          $red   = float($hdFileArray[$i+1])/255.00;
          $green = float($hdFileArray[$i+2])/255.00;
          $blue  = float($hdFileArray[$i+3])/255.00;
          if($mode == 1)
          {
              seSetRamp($insideReflectionRamp,   $red, $green, $blue, $angleAmount, $j);
          }
          if($mode == 2)
          {
              seSetRamp($outsideReflectionRamp,  $red, $green, $blue, $angleAmount, $j);
          }
          if($mode == 3)
          {
              seSetRamp($transmissionRamp,       $red, $green, $blue, $angleAmount, $j);
          }
          $angleAmount = $angleAmount + ($angle);
          $i=$i+3;
          print ($j+ " j \n");
          $j=$j+1;//J is used to set the color angle value in seSetRamp
 
      }
    }
}
seAssignAttrFromFile(0, "", 2,2);
