proc float roundingFunction(string $inVar, int $inRDegree)
{
     string $decimalTest  = "";
     float  $roundUpValue = 1/(abs(`pow 10 $inRDegree`));
     int    $i            = 0;
     int    $Dtolerance   = 0;
     int    $roundTest    = 0;
     int    $skip         = 0;
     int    $inVarSize    = size($inVar);

     if ($inVarSize == 1)
     {
           return $inVar;
     }
     //Detect the Decimal point
     while($decimalTest != "." && $i <= $inVarSize)
     {
           ++$i;
           $decimalTest = `substring $inVar $i $i`;
           //print ("i = "+$i+"\n");
           if($decimalTest != "." && $i > $inVarSize)
           {
                 $skip = 1;
           }
     }
     $roundTest = `substring $inVar ($i+$inRDegree) ($i+$inRDegree)`;
     float $outVar = `substring $inVar 1 ($i+$inRDegree)`;
     //print ("rT = "+ $roundTest + " oV = "+$outVar+" rUV = " +$roundUpValue + "\n");
     //Round the number base on your input
     if($roundTest > 5 && $skip == 0)
     {
           $outVar = ($outVar - ($roundUpValue * $roundTest)) + ($roundUpValue * 10);
           //print ("1 oV-rT = "+($outVar - $roundTest)+" rUV = " +($roundUpValue * 10) +"\n");
           $skip = 1;
     }
     else if($roundTest == 5 && $skip == 0)
     {
           //print "2 \n";
           $skip = 1;
     }
     else if($roundTest < 5  && $skip == 0)
     {
           $outVar = $outVar - ($roundUpValue * $roundTest);
           //print ("3 rUV*rT = " +($roundUpValue * $roundTest) +" \n");
     }
     //print ("oV = " + $outVar + " i = "+$i+" \n");
     return $outVar;
}//End roundingFunction

proc maya2RIB(string $fileName, int $OAswitch)
{
     float $ObjTX              = 0;
     float $ObjTY              = 0;
     float $ObjTZ              = 0;

     float $ObjRX              = 0;
     float $ObjRY              = 0;
     float $ObjRZ              = 0;
     float $r                  = 1;

     int   $setDecimal         = 2;
     int   $GetEndFrame        = `getAttr "defaultRenderGlobals.endFrame"`;
     int   $GetPlayBackEndTime = `playbackOptions -q -animationEndTime`;
     int   $GetPlayBackRange   = `playbackOptions -q -maxTime`;
     int   $betaFrameVar       = 2;
     int   $i                  = 0;
     int   $j                  = 0;


     string $part1 = "";
     string $selection[]   = `ls -sl`;
     int    $selectionSize = (size($selection));

     $RIBFile = ( `internalVar -userTmpDir` + $fileName );
     $fileId=`fopen $RIBFile "w"`;
     fprint $fileId ("TransformBegin \n");
     while($i != $selectionSize)//selection controlled loop
     {
            float $rand_Value  = roundingFunction(`rand .9 1.1`, $setDecimal);
            float $rand_ValueX = roundingFunction(`rand -45 45`  , $setDecimal);
            float $rand_ValueY = roundingFunction(`rand -45 45`  , $setDecimal);
            float $rand_ValueZ = roundingFunction(`rand -45 45`  , $setDecimal);

            $ObjTX = roundingFunction((`getAttr ($selection[$i] + ".tx")`), $setDecimal);
            $ObjTY = roundingFunction((`getAttr ($selection[$i] + ".ty")`), $setDecimal);
            $ObjTZ = roundingFunction((`getAttr ($selection[$i] + ".tz")`), $setDecimal);

            $ObjRX = roundingFunction((`getAttr ($selection[$i] + ".rx")`), $setDecimal);
            $ObjRY = roundingFunction((`getAttr ($selection[$i] + ".ry")`), $setDecimal);
            $ObjRZ = roundingFunction((`getAttr ($selection[$i] + ".rz")`), $setDecimal);

            fprint $fileId ("\n\t TransformBegin");
            fprint $fileId ("\n\t\t Translate " + ($ObjTX) +" "+ ($ObjTY) +" "+ ($ObjTZ) );
            fprint $fileId ("\n\t\t Scale 1 "   + $rand_Value + " 1 ");
            fprint $fileId ("\n\t\t Rotate "    + $ObjRX + " " + "1 0 0");
            fprint $fileId ("\n\t\t Rotate "    + $ObjRY + " " + "0 1 0");
            fprint $fileId ("\n\t\t Rotate "    + $ObjRZ + " " + "0 0 1");
            fprint $fileId ("\n\t\t Sphere "    + $r + " " + (-$r) +" " + $r +" 360\n\t TransformEnd\n");
            //fprint $fileId ("\n\t\t ReadArchive \"grapes2.rib\" \n\t TransformEnd\n");
            ++$i;
          }//loop
     fprint $fileId ("TransformEnd");
     fclose $fileId;
}//end proc