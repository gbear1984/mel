proc string[] getSelection()
{
     string $selArray[] = `ls -sl`;
     return $selArray;
     if (size($selArray) == 0)
        {
            error "Select at least one object";
        }//if
}//proc

proc ParticleObjectLinker()//int $objectlinking)
{
     global int $dyn = 1;
     string $ParticleCreation = "particle ";
     string $p = " -p ";
     string $listArray[] = `getSelection`;
     float  $particlePosition[2];
     int $selectionSize = (size($listArray));
     float $X;
     float $Y;
     float $Z;
     for($i = 0; $i < $selectionSize; $i++)
     {
            $X = `objectCenter -gl -x $listArray[$i]`;
            $Y = `objectCenter -gl -y $listArray[$i]`;
            $Z = `objectCenter -gl -z $listArray[$i]`;
            //rename $listArray[$i] ("OBJ_"+$i);
            //particle -p $X $Y $Z -c 1 -n ("ParticleLinked_" + $i);
            // -r ($listArray[$i]) ("ParticleLinked_"+$i);
            //;
            //select -cl  ;
            $ParticleCreation = ($ParticleCreation + "-p " + $X + " " + " " + $Y + " " + $Z);
     }//loop
     $ParticleCreation = ($ParticleCreation + " -c 1 -n \"ParticleLinked\"");
     //print $ParticleCreation;
     eval($ParticleCreation);
     //return $evaluate;
    for($i = 0; $i < $selectionSize; $i++)
    {
            $particlePosition = `pointPosition -l ParticleLinked.pt[$i]`;
            select -r $listArray[$i];
            move -r (-1*$particlePosition[0])  (-1*$particlePosition[1]) (-1*$particlePosition[2]);
            makeIdentity -apply true -t 1 -r 0 -s 0 -n 0;
            move -r $particlePosition[0]  $particlePosition[1] $particlePosition[2];

            //if($objectlinking == 1){
            expression -s ("float $particlePosition"+$i+"[2] = `pointPosition -w ParticleLinked.pt["+ $i +"]`; \n if($dyn == 1){"+ $listArray[$i]+ ".tx = $particlePosition"+$i+"["+0+"];\n"+ $listArray[$i]+ ".ty = $particlePosition"+$i+"["+1+"]; \n"+ $listArray[$i]+ ".tz = $particlePosition"+$i+"["+2+"];}");
            expression -s ("float $partVelocity[5] = `getParticleAttr -at velocity ParticleLinked.pt["+$i+"]`; \n"+ $listArray[$i]+ ".rx = ("+ $listArray[$i] +".tx * "+ $listArray[$i] +".tx) *($partVelocity[0] * 0.95);\n"+ $listArray[$i] +".ry = ("+ $listArray[$i] +".ty * "+ $listArray[$i] +".ty) *($partVelocity[1] * 0.95);\n"+ $listArray[$i] +".rz = ("+ $listArray[$i] +".tz * "+ $listArray[$i] +".tz) *($partVelocity[2] * 0.95);");
            //}
            //expression -s ($listArray[$i]+".rx =  $partVelocity[3]");

             //getParticleAttr -at velocity ParticleLinked.pt[0];

            //print $particlePosition[0];
           // print $particlePosition[1];
            //print $particlePosition[2];
           // expression -s ($listArray[$i]+ ".tx = " + $particlePosition[0]);
           // expression -s ($listArray[$i]+ ".ty = " + $particlePosition[1]);
           // expression -s ($listArray[$i]+ ".tz = " + $particlePosition[2]);
          //  expression -s $listArray[$i] ($listArray[$i]".tx = " + $particlePosition[1]);
          //  expression -s $listArray[$i] ($listArray[$i]".tx = " + $particlePosition[2]);
            //expression -o"turb" -s"turb.tz = time * -1";
     //      pointPosition -l particle1.pt[1];
    }
}//proc